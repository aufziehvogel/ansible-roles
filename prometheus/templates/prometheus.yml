# my global config
global:
  scrape_interval:     {{ prometheus_scrape_interval }}
  evaluation_interval: {{ prometheus_evaluation_interval }}
  scrape_timeout: {{ prometheus_scrape_timeout }}

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # metrics_path defaults to '/metrics'
  # scheme defaults to 'http'.
{% for scrape_config in prometheus_scrape_configs %}
  - job_name: '{{ scrape_config }}'
    static_configs:
    - targets:
{% for target in prometheus_scrape_configs[scrape_config]['targets'] %}
      - '{{ target }}'
{% endfor %}
{% endfor %}

{% if prometheus_blackbox_scrape_configs is defined %}
  - job_name: 'blackbox_ipv4'
    metrics_path: /probe
    params:
      module: [http_2xx_ipv4]
    static_configs:
      - targets:
{% for target in prometheus_blackbox_scrape_configs %}
        - '{{ target }}'
{% endfor %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {{ prometheus_blackbox_host }}
  - job_name: 'blackbox_ipv6'
    metrics_path: /probe
    params:
      module: [http_2xx_ipv6]
    static_configs:
      - targets:
{% for target in prometheus_blackbox_scrape_configs %}
        - '{{ target }}'
{% endfor %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {{ prometheus_blackbox_host }}
{% endif %}
