server {
    listen {{ nginx_passthrough_listen_port }};
    listen [::]:{{ nginx_passthrough_listen_port }};
    charset utf-8;
    client_max_body_size 75M;

    server_name {{ nginx_passthrough_server_name }};

    root /var/www/{{ nginx_passthrough_name }}/public_html;

    location / {
        rewrite ^ https://{{ nginx_passthrough_server_name }}$request_uri? permanent;
    }

    location /.well-known/acme-challenge {
        root /var/www/letsencrypt;
        allow all;
    }
}

server {
    listen {{ nginx_passthrough_listen_port_ssl }} ssl;
    listen [::]:{{ nginx_passthrough_listen_port_ssl }} ssl;
    charset utf-8;
    client_max_body_size 75M;

    server_name {{ nginx_passthrough_server_name }};

    ssl_certificate     /etc/letsencrypt/live/{{ nginx_passthrough_server_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ nginx_passthrough_server_name }}/privkey.pem;

    include /etc/nginx/ssl/ssl_secure.conf;

    root /var/www/{{ nginx_passthrough_name }}/public_html;

    # TODO: Use location / { try_files $uri @wsgi; } later to allow us to
    # serve static files from root and only dynamic from wsgi

    location / {
        proxy_pass http://{{ nginx_passthrough_target_host }}:{{ nginx_passthrough_target_port }};
        proxy_read_timeout 86400;

        proxy_set_header X-Forwarded-For: $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP: $remote_addr;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        {% if nginx_passthrough_login_username is defined and nginx_passthrough_login_passwordhash is defined %}
        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/conf.d/.htpasswd.{{ nginx_passthrough_name }};
        {% endif %}
    }

    location /.well-known/acme-challenge {
        root /var/www/letsencrypt;
        allow all;
    }
}
