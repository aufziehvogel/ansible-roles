#!/usr/bin/env bash

now=$(date +'%Y%m%d-%H%M%S')
filename=${now}.sql
filepath="{{ backup_postgres_s3_tmpdir }}/$filename"

su -c "pg_dumpall > $filepath" {{ backup_postgres_s3_db_user }} 
zstd $filepath

# delete the file without .zst suffix
rm $filepath

# filename now has a zst suffix
filename=${filename}.zst
filepath=${filepath}.zst

{% if backup_postgres_s3_gpgkey %}
su -c "gpg --encrypt --recipient {{ backup_postgres_s3_gpgkey_mail }} --trust-model always $filepath" {{ backup_postgres_s3_s3_user }}

# delete the file without gpg suffix
rm $filepath

# filename now has a gpg suffix
filename=${filename}.gpg
filepath=${filepath}.gpg
{% endif %}

su -c "aws s3 cp $filepath s3://{{ backup_postgres_s3_bucket }}/postgres/${filename}" {{ backup_postgres_s3_s3_user }}

rm $filepath

# send signal if file was successfully uploaded
su -c "aws s3api head-object --bucket \"{{ backup_postgres_s3_bucket }}\" --key \"postgres/$filename\"" {{ backup_postgres_s3_s3_user }}
if [ $? -eq 0 ]; then
    unixtime=$(date +%s)
    echo "{{ backup_postgres_s3_prometheus_metric_name }} $unixtime" | curl --data-binary @- {{ backup_postgres_s3_prometheus_pushgateway }}
fi
